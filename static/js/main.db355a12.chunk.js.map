{"version":3,"sources":["p2-homeworks/h5/HW5.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/Spinner-1s-200px (1).svg","p2-homeworks/h10/HW10.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","angle","content","name","text","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressAddName","inputClass","value","onChange","onKeyPress","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","key","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","onChangeSuperDoubleRange","classes","makeStyles","root","width","useStyles","Typography","id","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","getAriaValueText","HW11","value1","setValue1","React","newValue","event","homeWorkReducer","action","newState","sort","b","payload","reverse","age","initialPeople","HW8","people","setPeople","finalPeople","p","Clock","timerId","setTimerId","date","setDate","show","setShow","stop","clearInterval","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","window","setInterval","Date","HW9","initState","isLoading","isLoadingAC","HW10","useSelector","loading","dispatch","useDispatch","logo","setTimeout","console","log","SuperSelect","options","onChangeOption","mappedOptions","o","i","SuperRadio","onChangeCallback","arr","HW7","Junior","Junior_Plus","PATH","Routes","path","component","Header","header","to","link","activeClassName","activeLink","block","HW5","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,OAAS,oBAAoB,KAAO,kBAAkB,WAAa,wBAAwB,MAAQ,qB,mBCArHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,yBAAyB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,wB,mBCAzND,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,mBCAxFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,0B,mBCAlED,EAAOC,QAAU,CAAC,MAAQ,4B,yKC0BXC,MAjBf,SAAiBC,GACb,OACI,sBAAKC,UAAWC,IAAEC,QAAlB,UACI,qBAAKC,IAAKJ,EAAMK,OAAQJ,UAAWC,IAAEG,SAErC,qBAAKJ,UAAWC,IAAEI,QAElB,sBAAKL,UAAWC,IAAEK,QAAlB,UACI,mBAAGN,UAAWC,IAAEM,KAAhB,SAAuBR,EAAMQ,OAC7B,oBAAGP,UAAWC,IAAEO,KAAhB,cAAwBT,EAAMG,WAC9B,sBAAMF,UAAWC,IAAEQ,KAAnB,SAA0BV,EAAMU,cCjB1CC,EACM,qFADNA,EAEI,QAFJA,EAGO,wDAHPA,EAII,QA2BKC,MAxBf,WAEI,OACI,gCAMI,cAAC,EAAD,CACIP,OAAQM,EACRH,KAAMG,EACNR,QAASQ,EACTD,KAAMC,IAGV,uBAGA,2B,OCPGE,MAbf,SAAgBb,GAGZ,OACI,gCACKA,EAAMc,OAAON,KACbR,EAAMc,OAAOC,SAEd,wBAAQC,QAPO,WAAOhB,EAAMiB,qBAAqBjB,EAAMc,OAAOI,MAO9D,mBCoBGC,MA3Bf,SAAiBnB,GACb,IAAMoB,EAAgBpB,EAAMqB,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIT,OAAQS,EACRN,qBAAsBjB,EAAMiB,sBAFvBM,EAAEL,QAWf,OACI,gCAEKE,EAED,wBAAQJ,QAVD,WAAOhB,EAAMwB,UAAU,QAU9B,iBACA,wBAAQR,QAVA,WAAOhB,EAAMwB,UAAU,SAU/B,kBACA,wBAAQR,QAVE,WAAOhB,EAAMwB,UAAU,WAUjC,oBACA,wBAAQR,QAVD,WAAOhB,EAAMwB,UAAU,QAU9B,qBCnBNC,EAAoC,CACtC,CAACP,IAAK,EAAGV,KAAM,QAASO,SAAU,QAClC,CAACG,IAAK,EAAGV,KAAM,QAASO,SAAU,OAClC,CAACG,IAAK,EAAGV,KAAM,QAASO,SAAU,OAClC,CAACG,IAAK,EAAGV,KAAM,OAAQO,SAAU,QACjC,CAACG,IAAK,EAAGV,KAAM,aAAcO,SAAU,WAuC5BW,MA3Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EAZmB,SAACH,EAA4BE,GACtD,MAAe,QAAXA,EAAyBF,EACjBA,EAAQE,QAAO,SAAAP,GAAC,OAAGA,EAAER,WAAae,KAUtBE,CAAcJ,EAASE,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIT,KAAMU,EACNP,UAAWA,EACXP,qBAXiB,SAACC,GAAD,OAAiBW,EATtB,SAACD,EAA4BV,GACrD,OAAOU,EAAQE,QAAO,SAAAP,GAAC,OAAEA,EAAEL,MAAQA,KAQsBe,CAAaL,EAASV,OAcvE,uBAGA,2B,yBCrBGgB,EAlB+B,SAAC,GAEzC,IADD1B,EACA,EADAA,KAAM2B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAAYC,EACnD,EADmDA,kBAE9CC,EAAatC,IAAEmC,MAErB,OACI,gCACI,uBAAOI,MAAOjC,EACPkC,SAAUP,EACVlC,UAAWuC,EACXG,WAAYJ,IACnB,+BAAOF,IACP,wBAAQrB,QAASoB,EAAjB,iBACA,+BAAOE,QC2BJM,EAtCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEnB,mBAAiB,IADiD,mBACnFnB,EADmF,KAC7EuC,EAD6E,OAEhEpB,mBAAiB,IAF+C,mBAEnFU,EAFmF,KAE5EW,EAF4E,KAcpFZ,EAAU,WACZU,EAAgBtC,GAChByC,MAAM,UAAD,OAAWzC,EAAX,OACLuC,EAAQ,KAONT,EAAaO,EAAMK,OAEzB,OACI,cAAC,EAAD,CACI1C,KAAMA,EACN2B,gBAzBgB,SAACgB,GACtB,IAAMC,EAAeD,EAAEE,cAAcZ,MAAMa,OACtCF,GACAL,EAAQK,GACRJ,EAAS,MAERD,EAAQ,IACTC,EAAS,sBAmBTZ,QAASA,EACTC,MAAOA,EACPC,WAAYA,EACZC,kBAdkB,SAACY,GACT,UAAVA,EAAEI,KACFnB,Q,QCIGoB,MA7Bf,WAAgB,IAAD,EACe7B,mBAA0B,IADzC,mBACJkB,EADI,KACGY,EADH,KAYX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBZ,MAAOA,EACPC,gBAhBH,SAACtC,GACrBiD,EAAS,CACL,CACIvC,IAAKwC,cACLlD,SAHA,mBAIEqC,QAaN,uBAGA,2B,+BCuBGc,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPElB,EAOH,EAPGA,SAAUmB,EAOb,EAPaA,aACVlB,EAMH,EANGA,WAAYmB,EAMf,EANeA,QACZzB,EAKH,EALGA,MACApC,EAIH,EAJGA,UAAW8D,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAM/D,IAAEmC,MAAR,YAAiB0B,GAAgC,IACnEG,EAAmB,UAAMhE,IAAEiE,WAAR,YAAsBlE,EAAYC,IAAEiE,WAAajE,IAAEkE,WAAnD,YAAiEnE,EAAjE,KAEzB,OACI,qCACI,mCACI2D,KAAM,OACNlB,SArBa,SAACS,GACtBT,GACGA,EAASS,GAEZU,GAAgBA,EAAaV,EAAEE,cAAcZ,QAkBrCE,WAhBe,SAACQ,GACxBR,GAAcA,EAAWQ,GAEzBW,GACa,UAAVX,EAAEI,KACFO,KAYK7D,UAAWiE,GAEPF,IAEP3B,GAAS,sBAAMpC,UAAWgE,EAAjB,SAAsC5B,Q,kCC3B7CgC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKrE,EAGR,EAHQA,UACF+D,EAEN,mCACKO,EAAc,UAAMD,EAAMpE,IAAEoE,IAAMpE,IAAEsE,QAAtB,YAAiCvE,GAErD,OACI,oCACIA,UAAWsE,GACPP,K,iBCuBDS,EAjCyC,SAAC,GASpD,EAPGb,KAOF,IANElB,EAMH,EANGA,SAAUgC,EAMb,EANaA,gBACVzE,EAKH,EALGA,UACA0E,GAIH,EALcZ,cAKd,EAJGY,UAEGX,EAEN,4FAQKE,EAAmB,UAAMhE,IAAE0E,SAAR,YAAoB3E,GAAwB,IAErE,OACI,kCACI,mCACI2D,KAAM,WACNlB,SAba,SAACS,GACtBT,GAAYA,EAASS,GAErBuB,GAAmBA,EAAgBvB,EAAEE,cAAcwB,UAW3C5E,UAAWiE,GAEPF,IAEPW,GAAY,sBAAM1E,UAAWC,IAAE6D,cAAnB,SAAmCY,QCwC7CG,MAzEf,WAAgB,IAAD,EACanD,mBAAiB,IAD9B,mBACJlB,EADI,KACEsE,EADF,KAEL1C,EAAQ5B,EAAO,GAAK,QAEpBuE,EAAY,WACV3C,EACAY,MAAM,gFAENA,MAAMxC,IARH,EAYmBkB,oBAAkB,GAZrC,mBAYJkD,EAZI,KAYKI,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAKhF,UAAWC,IAAEgF,OAAlB,UACI,cAAC,EAAD,CACIzC,MAAOhC,EACPoD,aAAckB,EACdjB,QAASkB,EACT3C,MAAOA,IAIX,cAAC,EAAD,CACIpC,UAAWC,IAAEiF,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIb,KAAG,EACHtD,QAASgE,EAFb,qBAOA,cAAC,EAAD,CAAaI,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIP,QAASA,EACTH,gBAAiBO,EAFrB,wBAQA,cAAC,EAAD,CAAeJ,QAASA,EAASnC,SA/CxB,SAACS,GAAD,OAAsC8B,EAAW9B,EAAEE,cAAcwB,eAkD9E,uBAKA,2BCGGQ,EA1D4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACAzB,EAKH,EALGA,QACA0B,EAIH,EAJGA,UAEGxB,EAEN,8DAC+BrC,oBAAkB,GADjD,mBACM8D,EADN,KACgBC,EADhB,OAE8DF,GAAa,GAArEb,EAFN,EAEMA,SAAUgB,EAFhB,EAEgBA,cAAe1F,EAF/B,EAE+BA,UAAc2F,EAF7C,wDAoBK7B,EAAmB,+KAAN,WAA4C9D,GAE/D,OACI,mCACKwF,EAEO,cAAC,EAAD,aACIH,WAAS,EACTC,OAnBG,SAACpC,GACpBuC,GAAY,GAEZH,GAAUA,EAAOpC,IAiBDW,QAzBI,WACpB4B,GAAY,GAEZ5B,GAAWA,MAwBSE,IAGR,8CACI2B,cArBU,SAACxC,GAC1BuC,GAAY,GAEbC,GAAiBA,EAAcxC,IAmBflD,UAAW8D,GAEP6B,GAJR,aAOKjB,GAAYX,EAAUvB,YCnExC,SAASoD,EAAatC,EAAauC,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQ5C,EAAKwC,GAIvB,SAASK,EAAgB7C,EAAa8C,GACzC,IAAMN,EAAgBG,aAAaI,QAAQ/C,GAE3C,OADsB,OAAlBwC,IAAwBM,EAAeL,KAAKO,MAAMR,IAC/CM,EAWXR,EAAqB,OAAQ,CAACW,EAAG,IAAKC,EAAG,IAGhBL,EAAwB,OAAQ,CAACI,EAAG,GAAIC,EAAG,ICcrDC,MAlCf,WAAgB,IAAD,EACe/E,mBAAiB,IADhC,mBACJc,EADI,KACGkE,EADH,KAUX,OACI,gCACI,uBADJ,cAKI,8BACI,cAAC,EAAD,CACIlE,MAAOA,EACPoB,aAAc8C,EACdnB,UAAW,CAACb,SAAUlC,OAAQmE,EAAY,qBAGlD,cAAC,EAAD,CAAa5F,QApBR,WACT6E,EAAkB,sBAAuBpD,IAmBrC,kBACA,cAAC,EAAD,CAAazB,QAlBL,WACZ2F,EAASP,EAAqB,sBAAuB,MAiBjD,qBAEA,uBAGA,2BCfGS,MAZf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,iBC6BGC,GA/BmC,SAAC,GAS9C,EAPGlD,KAOF,IANElB,EAMH,EANGA,SACAqE,EAKH,EALGA,cACA9G,EAIH,EAJGA,UAEG+D,EAEN,+DAOKgD,EAAmB,UAAM9G,IAAE+G,MAAR,YAAiBhH,GAAwB,IAElE,OACI,mCACI,mCACI2D,KAAM,QACNlB,SAZa,SAACS,GACtBT,GAAYA,EAASS,GAErB4D,GAAiBA,GAAe5D,EAAEE,cAAcZ,QAUxCxC,UAAW+G,GAEPhD,O,2BCILkD,GAlCsC,SAAC,GAMhD,IAJEzE,EAIH,EAJGA,MACA0E,EAGH,EAHGA,yBAUEC,EANYC,aAAW,CACzBC,KAAM,CACFC,MAAO,MAICC,GAMhB,OAEI,sBAAKvH,UAAWmH,EAAQE,KAAxB,UACI,cAACG,GAAA,EAAD,CAAYC,GAAG,eAAeC,cAAY,IAE1C,cAACC,GAAA,EAAD,CACInF,MAAOA,EACPC,SAAUyE,EACVU,kBAAkB,OAClBC,kBAAgB,eAChBC,iBAdZ,SAAmBtF,GACf,MAAM,GAAN,OAAUA,EAAV,gBC8BOuF,OAjDf,WAAiB,IAAD,EAEgBrG,mBAAS,GAFzB,mBAELsG,EAFK,KAEGC,EAFH,OAGgBvG,mBAAS,KAHzB,gCAScwG,IAAMxG,SAAmB,CAAC,GAAI,MAT5C,mBASLc,EATK,KASEkE,EATF,KAeZ,OACI,gCACI,uBADJ,eAKI,gCACI,+BAAOsB,IACP,cAAC,GAAD,CAEIlB,cApBM,SAACqB,GACnBF,EAAUE,SAuBN,gCACI,+BAAO3F,EAAM,KAEb,cAAC,GAAD,CACIA,MAAOA,EACP0E,yBAvBiB,SAACkB,EAAYD,GAC1CzB,EAASyB,MAyBD,+BAAO3F,EAAM,QAGjB,uBAIA,2BCnCC6F,GAAkB,SAACxC,EAA0ByC,GACtD,OAAQA,EAAO3E,MACX,IAAK,OAQD,IAAM4E,EAAW,YAAI1C,GAAO2C,MAAK,SAAClH,EAAEmH,GAAH,OAAOnH,EAAEf,KAAOkI,EAAElI,KAAO,GAAK,KAC/D,MAA0B,OAAnB+H,EAAOI,QAAmBH,EAAWA,EAASI,UAEzD,IAAK,QAED,OADuB9C,EAAMhE,QAAO,SAAA5B,GAAC,OAAIA,EAAE2I,KAAON,EAAOI,WAG7D,QACI,OAAO7C,ICnBbgD,GAAmC,CACrC,CAAC5H,IAAK,EAAGV,KAAM,qBAAOqI,IAAK,GAC3B,CAAC3H,IAAK,EAAGV,KAAM,yDAAaqI,IAAK,IACjC,CAAC3H,IAAK,EAAGV,KAAM,2BAAQqI,IAAK,IAC5B,CAAC3H,IAAK,EAAGV,KAAM,uCAAUqI,IAAK,IAC9B,CAAC3H,IAAK,EAAGV,KAAM,6CAAWqI,IAAK,IAC/B,CAAC3H,IAAK,EAAGV,KAAM,iCAASqI,IAAK,KAqClBE,OAlCf,WAAgB,IAAD,EACiBpH,mBAA4BmH,IAD7C,mBACJE,EADI,KACIC,EADJ,KAGLC,EAAcF,EAAO1H,KAAI,SAAA6H,GAAC,OAC5B,gCACI,+BAAOA,EAAE3I,OACT,+BAAO,IAAM2I,EAAEN,QAFTM,EAAEjI,QAUhB,OACI,gCACI,uBADJ,cAMKgI,EACD,8BAAK,cAAC,EAAD,CAAalI,QAZX,kBAAMiI,EAAUX,GAAgBQ,GAAe,CAAClF,KAAM,OAAQ+E,QAAS,SAYzE,uBACL,8BAAK,cAAC,EAAD,CAAa3H,QAZT,kBAAMiI,EAAUX,GAAgBQ,GAAe,CAAClF,KAAM,OAAQ+E,QAAS,WAY3E,yBACL,8BAAK,cAAC,EAAD,CAAa3H,QAZX,kBAAMiI,EAAUX,GAAgBQ,GAAe,CAAClF,KAAM,QAAS+E,QAAS,OAY1E,wBAEL,uBAGA,2BCEGS,OAjDf,WAAkB,IAAD,EACiBzH,mBAAiB,GADlC,mBACN0H,EADM,KACGC,EADH,OAEW3H,qBAFX,mBAEN4H,EAFM,KAEAC,EAFA,OAGW7H,oBAAkB,GAH7B,mBAGN8H,EAHM,KAGAC,EAHA,KAKPC,EAAO,WACTC,cAAcP,IAiBZQ,EAAU,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAMO,qBACnBC,EAAU,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAMS,qBAEzB,OACI,gCACI,qBACIC,aAbS,WACjBP,GAAQ,IAaAQ,aAXS,WACjBR,GAAQ,IAQJ,SAIKG,IAIJJ,GACG,8BACKM,IAIT,cAAC,EAAD,CAAa/I,QAlCP,WACV2I,IACA,IAAMjC,EAAayC,OAAOC,aAAY,WAClCZ,EAAS,IAAIa,QACd,KACHf,EAAW5B,IA6BP,mBACA,cAAC,EAAD,CAAa1G,QAAS2I,EAAtB,sBCzBGW,OAjBf,WACI,OACI,gCACI,uBADJ,cAKI,cAAC,GAAD,IAEA,uBAGA,2BCZLC,GAA2B,CAC9BC,WAAW,GAiBFC,GAAc,SAACD,GACxB,MAAO,CAAC5G,KAAM,eAAgB4G,cCvBnB,OAA0B,iDCiD1BE,OA1Cf,WAEI,IAAMF,EAAYG,aAAmC,SAAA7E,GAAK,OAAIA,EAAM8E,QAAQJ,aACtEK,EAAWC,cAejB,OACI,gCACI,uBADJ,eAKKN,EAEO,8BAAK,qBAAKpK,IAAK2K,OAEf,8BACI,cAAC,EAAD,CAAa/J,QAxBd,WAEf,IAAMuH,EAASkC,IAAY,GAC3BI,EAAStC,GAMTyC,YAJuB,WACpB,IAAMzC,EAASkC,IAAY,GAC3BI,EAAStC,KAEe,KAC3B0C,QAAQC,IAAI,eAcI,8BAKZ,uBAGA,2BCXGC,GAxBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,QACA1I,EAGH,EAHGA,SAAU2I,EAGb,EAHaA,eACPrH,EAEN,uDACKsH,EAAuBF,EAAUA,EAAQ9J,KAAI,SAACiK,EAAGC,GACnD,OAAQ,wBAA0B/I,MAAO8I,EAAjC,SAAqCA,GAAxBA,EAAI,IAAMC,MAC9B,GAQL,OACI,gDAAQ9I,SAPa,SAACS,GAEtBT,GAAYA,EAASS,GACrBkI,GAAkBA,EAAelI,EAAEE,cAAcZ,SAITuB,GAAxC,aACKsH,MCiBEG,GApCmC,SAAC,GAO9C,EALG7H,KAKF,IALQpD,EAKT,EALSA,KACN4K,EAIH,EAJGA,QAAS3I,EAIZ,EAJYA,MACTC,EAGH,EAHGA,SAAU2I,EAGb,EAHaA,eAIRK,GADL,6EACwB,SAACvI,GAEtBT,GAAYA,EAASS,GACrBkI,GAAkBA,EAAelI,EAAEE,cAAcZ,SAI/C6I,EAAuBF,EAAUA,EAAQ9J,KAAI,SAACiK,EAAGC,GAAJ,OAC/C,cAD2D,CAC3D,mBACI,uBACI5H,KAAM,QAENpD,KAAMA,EACNqE,QAAS0G,IAAM9I,EACfA,MAAO8I,EACP7I,SAAUgJ,IAEbH,IATO/K,EAAO,IAAMgL,MAWxB,GAEL,OACI,mCACKF,KCnCPK,GAAM,CAAC,IAAK,IAAK,KAoCRC,OAlCf,WAAgB,IAAD,EACqBjK,mBAAoBgK,GAAI,IAD7C,mBACJlJ,EADI,KACG4I,EADH,KAGX,OACI,gCACI,uBADJ,cAKI,8BACI,cAAC,GAAD,CACID,QAASO,GACTlJ,MAAOA,EACP4I,eAAgBA,MAGxB,8BACI,cAAC,GAAD,CACI7K,KAAM,QACN4K,QAASO,GACTlJ,MAAOA,EACP4I,eAAgBA,MAIxB,uBAIA,2BCjBGQ,OAZf,WACI,OACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCJGC,OARf,WACI,OACI,+CCGKC,GACG,cADHA,GAED,UAFCA,GAGI,WA+BFC,OA1Bf,WACI,OACI,8BAEI,eAAC,IAAD,WAKA,cAAC,IAAD,CAAOC,KAAMF,GAAiBG,UAAWrF,IACzC,cAAC,IAAD,CAAOoF,KAAMF,GAAaG,UAAWL,KACrC,cAAC,IAAD,CAAOI,KAAMF,GAAkBG,UAAWJ,KAP1C,sB,oBCHGK,OAXf,WACI,OACI,sBAAKlM,UAAWC,KAAEkM,OAAlB,UACI,cAAC,IAAD,CAASC,GAAIN,GAAiB9L,UAAWC,KAAEoM,KAAMC,gBAAiBrM,KAAEsM,WAApE,uBACA,cAAC,IAAD,CAASH,GAAIN,GAAa9L,UAAWC,KAAEoM,KAAMC,gBAAiBrM,KAAEsM,WAAhE,oBACA,cAAC,IAAD,CAASH,GAAIN,GAAkB9L,UAAWC,KAAEoM,KAAMC,gBAAiBrM,KAAEsM,WAArE,qBACA,qBAAKvM,UAAWC,KAAEuM,YCSfC,OAff,WACI,OACI,8BAEI,eAAC,IAAD,WAEA,cAAC,GAAD,IAEA,cAAC,GAAD,UCKGC,OAdf,WACI,OACI,sBAAK1M,UAAWC,IAAEyM,IAAlB,UACI,mDAKA,cAAC,GAAD,QCAQC,QACa,cAA7BzC,OAAO0C,SAASC,UAEa,UAA7B3C,OAAO0C,SAASC,UAEhB3C,OAAO0C,SAASC,SAASC,MACrB,2D,aCfFC,GAAWC,aAAgB,CAC7BrC,QbS0B,WAAsE,IAArE9E,EAAoE,uDAA5DyE,GAAWhC,EAAiD,uCAC/F,OAAQA,EAAO3E,MACX,IAAK,eACD,OAAO,2BAAIkC,GAAX,IAAkB0E,UAAWjC,EAAOiC,YAExC,QAAS,OAAO1E,MaVlBoH,GAAQC,aAAYH,IAEXE,MAKf/C,OAAO+C,MAAQA,GCPfE,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRK,SAASC,eAAe,SF6HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAA1L,GACH4I,QAAQ5I,MAAMA,EAAMlC,c","file":"static/js/main.db355a12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HW5_header__fgR5q\",\"link\":\"HW5_link__3bpqs\",\"activeLink\":\"HW5_activeLink__124Aj\",\"block\":\"HW5_block__1qXpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"avatar\":\"Message_avatar__3FT3j\",\"content\":\"Message_content__Ltxgc\",\"angle\":\"Message_angle__1T-oN\",\"text\":\"Message_text__2fXBO\",\"name\":\"Message_name__Tzmp0\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2K0wQ\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.message}>\n            <img src={props.avatar} className={s.avatar}/>\n\n            <div className={s.angle}/>\n\n            <div className={s.content}>\n                <p className={s.name}>{props.name}</p>\n                <p className={s.text}> {props.message}</p>\n                <span className={s.time}>{props.time}</span>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Artem',\n    message: 'npm start нажимал?',\n    time: '20:00',\n}\n\nfunction HW1() {\n\n    return (\n        <div>\n            {/*<hr/>*/}\n            {/*homeworks 1*/}\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div>\n            {props.affair.name}\n            {props.affair.priority}\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")}\n    const setHigh = () => {props.setFilter(\"high\")}\n    const setMiddle = () => {props.setFilter(\"middle\")}\n    const setLow = () => {props.setFilter(\"low\")}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"// need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter(a=> a.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a=>a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: any) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n    onKeyPressAddName: any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressAddName} // деструктуризация пропсов\n) => {\n    const inputClass = s.error // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={inputClass}\n                   onKeyPress={onKeyPressAddName}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n       const trimmedName =  e.currentTarget.value.trim()\n        if (trimmedName) {\n            setName(trimmedName)\n            setError(\"\")\n        } else {\n            (setName(\"\"))\n            setError(\"name is require!\")\n        }\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello, ${name} !`)\n        setName(\"\")\n    }\n    const onKeyPressAddName = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            addUser()\n        }\n    }\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyPressAddName={onKeyPressAddName}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\"\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        setUsers([\n            {\n                _id: v1(),\n                name\n            }, ...users\n        ])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users}\n                               addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? s.errorInput : s.superInput} ${className} ` // need to fix with (?:) and s.superInput - done\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false);\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n         setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохранятся даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        setValue(restoreState<string>(\"editable-span-value\", \"\"))\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperRange.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value);\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\n\n    return (\n        <>\n            <input\n                type={\"range\"}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    );\n}\n\nexport default SuperRange;\n","import React from \"react\";\nimport {makeStyles, Slider, Typography} from \"@material-ui/core\";\n\ntype SuperDoubleRange = {\n    value: number[]\n    onChangeSuperDoubleRange: (event: any, newValue: number | number[]) => void\n}\nconst SuperDoubleRange: React.FC<SuperDoubleRange> = (\n    {\n        value,\n        onChangeSuperDoubleRange\n\n    }\n) => {\n    const useStyles = makeStyles({\n        root: {\n            width: 300,\n        },\n    });\n\n    const classes = useStyles();\n\n    function valuetext(value: number) {\n        return `${value}°C`;\n    }\n\n    return (\n\n        <div className={classes.root}>\n            <Typography id=\"range-slider\" gutterBottom>\n            </Typography>\n            <Slider\n                value={value}\n                onChange={onChangeSuperDoubleRange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n            />\n        </div>\n    )\n}\nexport default SuperDoubleRange","import React, { useState} from \"react\";\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\n\nfunction HW11() {\n\n    const [value1, setValue1] = useState(0);\n    const [value2, setValue2] = useState(100);\n\n    const onChangeRange = (newValue: number) => {\n        setValue1(newValue)\n    }\n\n    const [value, setValue] = React.useState<number[]>([20, 80]);\n\n    const onChangeSuperDoubleRange = (event: any, newValue: number | number[]) => {\n        setValue(newValue as number[])\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 11\n\n            {/*should work (должно работать)*/}\n            <div>\n                <span>{value1}</span>\n                <SuperRange\n                    // сделать так чтоб value1 изменялось\n                    onChangeRange={onChangeRange}\n                />\n            </div>\n\n            <div>\n                <span>{value[0]}</span>\n\n                <SuperDoubleRange\n                    value={value}\n                    onChangeSuperDoubleRange={onChangeSuperDoubleRange}\n                />\n\n                <span>{value[1]}</span>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperRange/>*/}\n            {/*<AlternativeSuperDoubleRange/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW11\n","import {initialPeopleType} from \"../HW8\";\n\ntype SortPeopleByNameType = {\n    type: \"sort\"\n    payload: \"up\" | \"down\"\n}\n\ntype SortPeopleByAgeType = {\n    type: \"check\"\n    payload: number\n}\n\ntype ActionType = SortPeopleByNameType | SortPeopleByAgeType\nexport const homeWorkReducer = (state: initialPeopleType, action: ActionType): initialPeopleType => {\n    switch (action.type) {\n        case \"sort\": {\n            // if (action.payload === \"up\") {\n            //     const newState = [...state].sort((a, b) => a.name > b.name ? 1 : -1)\n            //     return newState\n            // } else {\n            //     const newState = [...state].sort((a, b) => a.name < b.name ? 1 : -1)\n            //     return newState\n            // }\n            const newState = [...state].sort((a,b)=>a.name > b.name ? 1 : -1)\n            return action.payload === \"up\" ? newState : newState.reverse()\n        }\n        case \"check\": {\n            const newPeopleArray = state.filter(s => s.age >= action.payload)\n            return newPeopleArray\n        }\n        default:\n            return state\n    }\n};","import React, {useState} from \"react\";\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\n\ntype PeopleType = {\n    _id: number\n    name: string\n    age: number\n}\nexport type initialPeopleType = Array<PeopleType>\n\nconst initialPeople: initialPeopleType = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState<initialPeopleType>(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            <span>{p.name}</span>\n            <span>{\" \" + p.age}</span>\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"down\"}))\n    const chek18 = () => setPeople(homeWorkReducer(initialPeople, {type: \"check\", payload: 18}))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n            <div><SuperButton onClick={chek18}>check 18</SuperButton></div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","import React, {useState} from \"react\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number>(0);\n    const [date, setDate] = useState<Date>();\n    const [show, setShow] = useState<boolean>(false);\n\n    const stop = () => {\n        clearInterval(timerId)\n    }\n    const start = () => {\n        stop();\n        const id: number = window.setInterval(() => {\n            setDate (new Date())\n        }, 1000);\n        setTimerId(id);\n    }\n\n    const onMouseEnter = () => {\n        setShow(true)\n    };\n    const onMouseLeave = () => {\n        setShow(false)\n    };\n\n    const stringTime = date?.toLocaleTimeString(); // fix with date\n    const stringDate = date?.toLocaleDateString(); // fix with date\n\n    return (\n        <div>\n            <div\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                {stringTime}\n\n            </div>\n\n            {show && (\n                <div>\n                    {stringDate}\n                </div>\n            )}\n\n            <SuperButton onClick={start}>start</SuperButton>\n            <SuperButton onClick={stop}>stop</SuperButton>\n\n        </div>\n    );\n}\n\nexport default Clock;\n","import React from \"react\";\nimport Clock from \"./Clock\";\nimport AlternativeClock from \"./AlternativeClock\";\n\nfunction HW9() {\n    return (\n        <div>\n            <hr/>\n            homeworks 9\n\n            {/*should work (должно работать)*/}\n            <Clock/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeClock/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW9;\n","export type initStateType = {\n    isLoading: boolean\n}\n\n const initState: initStateType = {\n    isLoading: false\n};\n\ntype LoadingTrueActionType = {\n    type: \"LOADING_TRUE\"\n    isLoading: boolean\n}\n\nexport const loadingReducer = (state = initState, action: LoadingTrueActionType): initStateType => { // fix any\n    switch (action.type) {\n        case \"LOADING_TRUE\": {\n            return {...state, isLoading: action.isLoading};\n        }\n        default: return state;\n    }\n};\n\nexport const isLoadingAC = (isLoading: boolean): LoadingTrueActionType => {\n    return {type: \"LOADING_TRUE\", isLoading}\n}; // fix any","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px (1).589a2126.svg\";","import React from \"react\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"./bll/store\";\nimport {isLoadingAC} from \"./bll/loadingReducer\";\nimport logo from \"./Spinner-1s-200px (1).svg\"\n\nfunction HW10() {\n    // useSelector, useDispatch\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.loading.isLoading)\n    const dispatch = useDispatch()\n\n    const setLoading = () => {\n        // dispatch\n        const action = isLoadingAC(true)\n        dispatch(action)\n        // setTimeout\n       const  isLoadingFalse = () => {\n           const action = isLoadingAC(false)\n           dispatch(action)\n       }\n        setTimeout(isLoadingFalse, 2000)\n        console.log(\"loading...\");\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 10\n\n            {/*should work (должно работать)*/}\n            {isLoading\n                ? (\n                    <div><img src={logo}/></div>\n                ) : (\n                    <div>\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\n                    </div>\n                )\n            }\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<Alternative/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW10;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((o, i)=>{\n        return (<option key={o + \"-\" + i} value={o}>{o}</option>)\n    }) : []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                // name, checked, value, onChange\n                name={name}\n                checked={o === value}\n                value={o}\n                onChange={onChangeCallback}\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nexport type ValueType = string\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState<ValueType>(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import React from \"react\";\nimport HW11 from \"../../h11/HW11\";\nimport HW8 from \"../../h8/HW8\";\nimport HW9 from \"../../h9/HW9\";\nimport HW10 from \"../../h10/HW10\";\nimport HW7 from \"../../h7/HW7\";\n\nfunction Junior() {\n    return (\n        <div>\n            <HW7/>\n            <HW8/>\n            <HW9/>\n            <HW10/>\n            <HW11/>\n        </div>\n    )\n}\n\nexport default Junior","import React from \"react\";\n\nfunction Junior_Plus() {\n    return (\n        <div>\n            Junior Plus\n        </div>\n    )\n}\n\nexport default Junior_Plus","import React from 'react'\nimport { Route, Switch} from 'react-router-dom'\nimport PreJunior from './pages/PreJunior'\nimport Junior from \"./pages/Junior\";\nimport Junior_Plus from './pages/JuniorPlus';\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior+',\n\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совпадение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/pre-junior'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n            <Route path={PATH.PRE_JUNIOR} component={PreJunior}/>\n            <Route path={PATH.JUNIOR} component={Junior}/>\n            <Route path={PATH.JUNIOR_PLUS} component={Junior_Plus}/>\n\n\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {PATH} from \"./Routes\";\nimport s from \"./HW5.module.css\"\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.activeLink}>PreJunior</NavLink>\n            <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.activeLink}>Junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.activeLink}>Junior+</NavLink>\n            <div className={s.block}></div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import {loadingReducer} from \"./loadingReducer\";\nimport {combineReducers, createStore} from \"redux\";\n\nconst reducers = combineReducers({\n    loading: loadingReducer,\n\n});\n\nconst store = createStore(reducers);\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store; // for dev\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport store from \"./p2-homeworks/h10/bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}